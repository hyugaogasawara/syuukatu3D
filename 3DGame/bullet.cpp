//=============================================================================
//
// 弾クラス [bullet.cpp]
// Author : 小笠原　彪我
//
//=============================================================================
//=============================================================================
//ヘッダファイルのインクルード
//=============================================================================
#include "bullet.h"
#include "game.h"
#include "modelsingle.h"
//=============================================================================
// マクロ定義
//=============================================================================

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CBullet::CBullet(int nPriority) : CBillboard(nPriority)
{
	// メンバ変数のクリア
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);	// 位置
	m_rot = D3DXVECTOR3(0.0f, 0.0f, 0.0f);	// 向き
	m_size = D3DXVECTOR3(0.0f, 0.0f, 0.0f);	// 大きさ
	m_move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);	// 移動量

}
//=============================================================================
// デストラクタ
//=============================================================================
CBullet::~CBullet()
{
}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CBullet::Init(void)
{
	// オブジェクトの種類設定
	SetObjType(OBJTYPE_BULLET);

	CBillboard::Init();
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CBullet::Uninit(void)
{
	CBillboard::Uninit();

	// オブジェクトを開放
	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CBullet::Update(void)
{
	// 位置を取得
	D3DXVECTOR3 pos = CBillboard::GetPosition();

	// 移動量更新
	pos += m_move;

	// 寿命減衰
	m_nLife--;

	// 0以下で削除
	if (m_nLife <= 0)
	{
		Uninit();
		return;
	}

	// 位置を設定
	CScene::SetPosition(pos);
	CBillboard::SetPosition(pos);
	CBillboard::Update();

	// 破棄
	if (m_bUninit)
	{
		Uninit();
	}

}

//=============================================================================
// 描画処理
//=============================================================================
void CBullet::Draw(void)
{
	// デバイスを取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	// ライティングを無効にする
	pDevice->SetRenderState(D3DRS_LIGHTING, FALSE);

	CBillboard::Draw();

	// ライティングを有効にする
	pDevice->SetRenderState(D3DRS_LIGHTING, TRUE);
}
//=============================================================================
// 弾の生成
//=============================================================================
CBullet *CBullet::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size, D3DXVECTOR3 move, int nLife, int nType)
{
	CBullet *pBullet = nullptr;
	if (pBullet == nullptr)
	{
		pBullet = new CBullet;

		if (pBullet != nullptr)
		{
			pBullet->m_move = move;		// 移動量
			pBullet->m_nLife = nLife;	// 寿命
			pBullet->SetSize(size);		// 大きさ
			pBullet->SetPosition(pos);	// 位置
			pBullet->BindTexture(nType);// テクスチャの種類
			pBullet->Init();
		}
	}
	return pBullet;
}
