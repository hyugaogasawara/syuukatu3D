//=============================================================================
//
// ライトクラス [light.cpp]
// Author : 小笠原　彪我
//
//=============================================================================
//=============================================================================
//ヘッダファイルのインクルード
//=============================================================================
#include "light.h"

//=============================================================================
// 静的メンバ変数
//=============================================================================
int CLight::m_nNumLight = 0;

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CLight::CLight()
{
	// メンバ変数のクリア
	ZeroMemory(&m_aLight[0], sizeof(D3DLIGHT9));

	// ライトの番号を保存する
	m_nCntLight = m_nNumLight;
	m_nNumLight++;

}
//=============================================================================
// デストラクタ
//=============================================================================
CLight::~CLight()
{
	// ライトの総数を減らす
	m_nNumLight--;
}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CLight::Init(D3DXVECTOR3 vecDir, D3DXVECTOR3 pos, D3DXCOLOR col, int nCntLight)
{
	// デバイスを取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	// ライトの種類を設定
	m_aLight[nCntLight].Type = D3DLIGHT_DIRECTIONAL;
	
	// 拡散光の設定
	m_aLight[nCntLight].Diffuse = col;	

	// 位置設定
	m_aLight[nCntLight].Position = pos;

	// 方向ベクトルを設定
	m_vecDir = vecDir;
	D3DXVec3Normalize(&m_vecDir, &m_vecDir);	// 正規化する

	// 方向を設定
	m_aLight[nCntLight].Direction = m_vecDir;

	// ライトを設定
	pDevice->SetLight(m_nCntLight, &m_aLight[nCntLight]);

	// ライトを有効にする
	pDevice->LightEnable(m_nCntLight, TRUE);

	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CLight::Uninit(void)
{
}
//=============================================================================
// 更新処理
//=============================================================================
void CLight::Update(void)
{
}
//=============================================================================
// 生成処理
//=============================================================================
CLight *CLight::Create(D3DXVECTOR3 vecDir, D3DXVECTOR3 pos, D3DXCOLOR col, int nCntLight)
{
	CLight *pLight;
	pLight = new CLight;

	if (pLight != NULL)
	{
		pLight->Init(vecDir, pos, col, nCntLight);	// 初期化処理
	}

	return pLight;
}
